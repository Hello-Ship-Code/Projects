{"version":3,"file":"user.js","sourceRoot":"","sources":["user.ts"],"names":[],"mappings":"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","sourcesContent":["import { type RequestHandler } from \"express\"\nimport shortid from 'shortid'\n\nimport { Url } from \"../models/user\";\n\ntype TypeHandler = RequestHandler<{shortId: string},{\n  status: string;\n  message: string;\n  Data?: object ;\n  totalClicks?:  number\n}, never, never>\n\ntype PostUrlHandler = RequestHandler<never,{\nstatus: string;\nmessage: string;\nData?: object;\n},{\n  url: string\n}, never>\n\nexport const postUrl: PostUrlHandler = async(req, res) =>{\n  const { url } = req.body\n  const shortID = shortid();\n\n  const entry = await Url.create({\n    shortID,\n    redirectUrl: url,\n    visitedHistory: []\n  })\n\n  res.json({status: \"success\", message: \"message sent to DataBase\", Data: entry})\n\n}\n\nexport const getAllData: TypeHandler = async(_req, res): Promise<void> =>{\n  const result = await Url.find({});\n  if(!result){\n    res.json({status: \"error\", message: \"no users found\"})\n    // return\n  }\n  res.status(200).json({status: \"success\", message: \"test\", Data: result})\n  \n}\n\nexport const getUrlByID: TypeHandler = async (req, res) =>{\n  try {\n  const result = await Url.findOneAndUpdate(\n  {shortID: req.params.shortId},\n  { $push: { visitHistory: { timeStamp: Date.now()}}},\n  {new: true});\n\n  if(!result){\n    res.status(400).json({status: \"error\", message: \"URL not found\"})\n    return\n  }\n\n  res.redirect(result.redirectUrl);\n\n}catch(error)\n{\n  console.log(error)\n  res.json({status: \"error\", message: \"Hello\"})\n}\n}\n\nconst getAnalyticsById: TypeHandler = async (req, res) =>{\n  try{\n    const shortID = req.params.shortId\n    const result = await Url.findOne({shortID})\n    if(!result)\n    {\n      res.status(400).json({status: \"error\", message: \"analytics not found\"})\n      return\n    }\n    res.json({status: \"success\", message: \"analytics data\", totalClicks: result.visitHistory.length, Data: result.visitHistory})\n\n  }catch(error){\n    console.log(\"The Error: \", error)\n    res.json({status: \"error\", message: \"server issue\"})\n  }\n}\n\nexport {  getAnalyticsById }"]}